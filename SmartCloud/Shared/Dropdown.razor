@using Microsoft.AspNetCore.Components.Web
@using SmartCloud.Components.Pages
@typeparam TItem
<div class="dropdown">
    <button id="Dropdown" class="btn btn-light dropdown-toggle mr-4 shadow-none" data-toggle="dropdown" type="button"
            @onclick="_ => show = !show"
            @onfocusout="_ => show = inMenu"
            aria-haspopup="true" aria-expanded="false">
        @Tip
    </button>
    <CascadingValue name="Dropdown" Value="@this">
        <div class="dropdown-menu @(show ? "show" : "")"
             @onmouseenter="_ => inMenu = true"
             @onmouseleave="_ => inMenu = false">
            @ChildContent
        </div>
    </CascadingValue>
</div>

@code {
    [Parameter] public RenderFragment InitialTip { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback<Tuple<TItem, string>> OnSelected { get; set; }

    private bool show = false;
    private bool inMenu = false;
    private RenderFragment Tip;

    protected override void OnInitialized()
    {
        this.Tip = InitialTip;
    }

    public async Task HandleSelect(TItem item, RenderFragment<TItem> contentFragment, string newValue)
    {
        Tip = contentFragment.Invoke(item);
        show = false;
        StateHasChanged();
        var args = new Tuple<TItem, string>(item, newValue);
        await OnSelected.InvokeAsync(args);
    }
}